managed; // implementation in class zbp_rslt_i_travel_m unique;

define behavior for ZRSLT_I_TRAVEL_M alias travel
implementation in class zrslt_bp_i_travel_m unique
persistent table /dmo/travel_m
lock master
//authorization master ( instance )
etag master last_changed_at
{

  // mandatory fields that are required to create a travel
  field ( mandatory ) agency_id, overall_status, booking_fee, currency_code;
  field ( features : instance ) travel_id;

  create;
  update;
  delete;

  // instance action and dynamic action control
  action ( features : instance ) acceptTravel result [1] $self;
  action ( features : instance ) rejectTravel result [1] $self;

  // validations
  validation validateCustomer on save { field customer_id; }
  validation validateDates on save { field begin_date, end_date; }
  validation validateOverallStatus on save { field overall_status; }

  association _Booking { create; }
}

define behavior for ZRSLT_I_Booking_M alias booking
implementation in class ZRSLT_BP_I_BOOKING_M unique
persistent table /dmo/booking_m
lock dependent ( travel_id = travel_id )
//authorization dependent( <local_field_name> = <target_field_name> )
etag master last_changed_at
{
  update;
  delete;
  association _BookSupplement { create; }
}

define behavior for ZRSLT_I_BookSuppl_M alias booksuppl
implementation in class ZRSLT_BP_I_BOOKINGSUPPLEMENT_M unique
persistent table /dmo/booksuppl_m
etag master last_changed_at
lock dependent ( travel_id = travel_id )
//authorization dependent( <local_field_name> = <target_field_name> )
{
  update;
  delete;
}